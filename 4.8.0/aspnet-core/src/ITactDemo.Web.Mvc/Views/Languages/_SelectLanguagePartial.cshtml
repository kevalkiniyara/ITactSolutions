@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOption


@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var CultureItems = LocOption.Value.SupportedCultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName }).ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}
<form id="selectLanguage" asp-controller="Languages" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl">
    
        @if (requestCulture != null)
        {
            <input type="hidden" name="currentCulture" value="@requestCulture.RequestCulture.UICulture.Name"/>
        }
        <label asp-for="@requestCulture.RequestCulture.UICulture.Name">@Localizer["Language:"]</label>
        <select name="culture" onchange="this.form.submit()" asp-for="@requestCulture.RequestCulture.UICulture.Name"></select>
</form>
