@using ITactDemo.Web.Models.Common.Modals
@using Abp.Application.Services.Dto
@using ITactDemo.Students
@using System

@model ITactDemo.Web.Models.Students.CreateOrUpdateStudentViewModel

@section styles{
    <environment names="Development">
        <link href="~/lib/bootstrap-datepicker/dist/css/bootstrap-datepicker.css" rel="stylesheet" />
    </environment>
}
@section scripts
    {
    <environment names="Development">
        <script src="~/lib/bootstrap-datepicker/dist/js/bootstrap-datepicker.js"></script>
        <script src="~/view-resources/Views/Students/_CreateOrEditStudent.js" asp-append-version="true"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/view-resources/Views/Students/_CreateOrEditStudent.min.js" asp-append-version="true"></script>
    </environment>
}
<div class="row clearfix">
    <div class="col-lg-12">
        <div class="card">
            <div class="body">
                <form name="StudentEditForm" id="StudentEditForm" role="form" novalidate class="form-validation form-horizontal">
                    @Html.Hidden("Id", Model.Student.Id, new { @id = "Id" })

                    <div class="form-group row">
                        <div class="col-sm-6">
                            <label for="firstName">@L("FirstName") <span class="text-danger">*</span></label>
                            @Html.TextBox("FirstName", Model.Student.FirstName, new { @class = "form-control", @maxlength = Student.MaxNameLength, @required = "required" })
                        </div>
                        <div class="col-sm-6">
                            <label for="lastName">@L("LastName")</label>
                            @Html.TextBox("LastName", Model.Student.LastName, new { @class = "form-control", @maxlength = Student.MaxNameLength })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-6">
                            <label for="email">@L("Email")</label>
                            @Html.TextBox("Email", Model.Student.Email, new { @class = "form-control", @maxlength = Student.MaxNameLength })
                        </div>
                        <div class="col-sm-6">
                            <label for="phoneNumber">@L("PhoneNumber")<span class="text-danger">*</span></label>
                            @Html.TextBox("PhoneNumber", Model.Student.PhoneNumber, new { @class = "form-control", @maxlength = Student.MaxNumberLength, @required = "required" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-6">
                            <label for="BirthDate">@L("BirthDate")</label>
                            <input type="text" id="datepicker" name="BirthDate" value="@Model.Student.BirthDate" class="form-control">
                        </div>
                        <div class="col-sm-6">
                            <label for="Standard">@L("Standard")<span class="text-danger">*</span></label>
                            @Html.DropDownList("Standard", Model.StandardList.Select(i => i.ToSelectListItem()), new { @class = "form-control", @required = "required" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-12">
                            <label for="Gender">@L("Gender")</label>

                            <input type="radio" id="male" name="Gender" value="Male" class="md-radiobtn" @(Model.Student.Gender == "Male" ? "checked=\"checked\"" : "") checked>
                            <label for="male">Male</label>

                            <input type="radio" id="female" name="Gender" value="Female" class="md-radiobtn" @(Model.Student.Gender == "Female" ? "checked=\"checked\"" : "")>
                            <label for="female">Female</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4">
                            <label for="HobbyId">@L("HobbyId")</label>
                            @foreach (var hobby in Model.HobbyList)
                             {
                                <div class="form-check">
                                    <input type="checkbox" name="HobbyId" id="hobbyId_@hobby.Value" value="@hobby.Value" class="form-control chkHobbies" @(hobby.IsSelected ? "checked=\"checked\"" : "") />
                                    <label class="form-check-label" for="hobbyId_@hobby.Value">@hobby.DisplayText</label>
                                </div>
                             }
                        </div>
                        <div class="col-sm-4">
                            <label>@L("Image")</label>
                            <div class="fileUpload btn btn-primary">
                                <span>Upload Image</span>
                                <input type="file" class="upload studentImage" accept=".jpg,.jpeg,.png" />
                            </div><br />
                        </div>
                        @if (Model.Student.Id > 0)
                        {
                            <div class="row">
                                <div class="col-sm-4">
                                    <input type="hidden" id="StudentImage" name="StudentImage" value="@Model.Student.StudentImage" />
                                    <img src="@Model.Student.StudentImagePic" height="50" id="studentImagePic" />
                                    <button id="removeImage" type="button">Remove</button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-sm-4">
                                    <input type="hidden" id="StudentImage" name="StudentImage" value="@Model.Student.StudentImage" />
                                </div>
                            </div>
                        }

                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4">
                            <label for="Country">@L("Country")</label>
                            @Html.DropDownList("CountryId", Model.CountryList.Select(i => i.ToSelectListItem()), "Select Country", new { @id = "Country", @class = "form-control" })
                        </div>
                        <div class="col-sm-4">
                            <label for="State">@L("State")</label>
                            @if (Model.Student.Id > 0)
                            {
                                @Html.DropDownList("StateId", Model.StateList.Select(i => i.ToSelectListItem()), "Select State", new { @id = "StateId", @class = "form-control" })
                            }
                            else
                            {
                                <select id="State" name="StateId" class="form-control"></select>
                            }
                        </div>
                        <div class="col-sm-4">
                            <label for="City">@L("City")</label>
                            @if (Model.Student.Id > 0)
                            {
                                @Html.DropDownList("CityId", Model.CityList.Select(i => i.ToSelectListItem()), "Select City", new { @id = "CityId", @class = "form-control" })
                            }
                            else
                            {
                                <select id="City" name="CityId" class="form-control"></select>
                            }
                        </div>
                    </div>



                    <button type="button" id="btnSave" class="btn btn-primary">@L("Save")</button>

                </form>
            </div>
        </div>
    </div>
</div>
